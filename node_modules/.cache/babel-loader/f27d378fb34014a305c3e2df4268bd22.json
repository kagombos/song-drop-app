{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      volume: 0,\n      playRate: 0,\n      pitch: 0\n    };\n    this.source = audioContext.createBufferSource();\n    this.gainNode = audioContext.createGain();\n    this.gainNode.gain.value = this.smoothAlgorithm(this.state.volume);\n    this.gainNode.connect(audioContext.destination);\n    this.source.playbackRate.value = this.smoothAlgorithm(this.state.playRate);\n    var url = \"http://localhost:5001/aaaaa.mp3\";\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    var a = this;\n\n    request.onload = () => {\n      console.log(request.response);\n      var promise = audioContext.decodeAudioData(request.response).then(function (data) {\n        console.log(data);\n        a.source.buffer = data;\n        a.source.loop = true;\n        a.source.connect(a.gainNode);\n        a.source.start(0);\n      }, e => {\n        console.log(e);\n      });\n      console.log(promise);\n    };\n\n    request.send();\n    this.playing = false;\n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\n    this.handlePlayRateChange = this.handlePlayRateChange.bind(this);\n  }\n\n  smoothAlgorithm(val) {\n    return Math.pow(val / 100, Math.log(10) / Math.log(2));\n  }\n\n  togglePlay() {\n    this.playing = !this.playing;\n    this.playSoundLoop();\n  }\n\n  playSoundLoop() {\n    if (this.playing) {\n      this.gainNode.gain.value = this.smoothAlgorithm(this.state.volume);\n      audioContext.resume();\n    } else {\n      audioContext.suspend();\n    }\n  }\n\n  onPlayRateStateChange(val) {\n    if (this.source !== undefined) {\n      var smoothed = this.smoothAlgorithm(val);\n      this.source.playbackRate.value = smoothed;\n    }\n\n    this.setState({\n      playRate: val\n    }, () => {\n      client.send(JSON.stringify(this.state));\n    });\n  }\n\n  onVolumeStateChange(val) {\n    if (this.source !== undefined) {\n      this.gainNode.gain.value = this.smoothAlgorithm(val);\n    }\n\n    this.setState({\n      volume: val\n    }, () => {\n      client.send(JSON.stringify(this.state));\n    });\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      this.handleVolumeChange(dataFromServer.volume);\n      this.handlePlayRateChange(dataFromServer.playRate);\n    };\n  }\n\n  handleVolumeChange(volume) {\n    this.gainNode.gain.value = this.smoothAlgorithm(volume);\n    this.setState({\n      volume: volume\n    });\n  }\n\n  handlePlayRateChange(playRate) {\n    this.source.playbackRate.value = this.smoothAlgorithm(playRate);\n    this.setState({\n      playRate: playRate\n    });\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Volume\"), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"volSlider\",\n      onChange: (e, val) => {\n        this.onVolumeStateChange(val);\n      },\n      min: 0,\n      max: 200,\n      value: this.state.volume,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    })), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, \"Playback Rate\"), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"playSlider\",\n      onChange: (e, val) => {\n        this.onPlayRateStateChange(val);\n      },\n      min: 0,\n      max: 200,\n      value: this.state.playRate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: (e, val) => {\n        this.togglePlay();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, \"Begin\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Slider","AudioContext","window","webkitAudioContext","audioContext","client","App","constructor","props","state","volume","playRate","pitch","source","createBufferSource","gainNode","createGain","gain","value","smoothAlgorithm","connect","destination","playbackRate","url","request","XMLHttpRequest","open","responseType","a","onload","console","log","response","promise","decodeAudioData","then","data","buffer","loop","start","e","send","playing","handleVolumeChange","bind","handlePlayRateChange","val","Math","pow","togglePlay","playSoundLoop","resume","suspend","onPlayRateStateChange","undefined","smoothed","setState","JSON","stringify","onVolumeStateChange","componentDidMount","onopen","onmessage","message","dataFromServer","parse","render","sliderStyle"],"mappings":"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","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\n\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tvolume: 0,\n    \tplayRate: 0,\n    \tpitch: 0\n    };\n    \n    this.source = audioContext.createBufferSource();\n    \n    this.gainNode = audioContext.createGain();\n    this.gainNode.gain.value = this.smoothAlgorithm(this.state.volume);\n    this.gainNode.connect(audioContext.destination);\n    \n    this.source.playbackRate.value = this.smoothAlgorithm(this.state.playRate);\n    \n    var url = \"http://localhost:5001/aaaaa.mp3\"\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    var a = this;\n    \n    request.onload = () => {\n      console.log(request.response);\n\n      var promise = audioContext.decodeAudioData(request.response).then(function (data) {\n    \tconsole.log(data);\n    \ta.source.buffer = data;\n    \ta.source.loop = true;\n    \ta.source.connect(a.gainNode);\n    \ta.source.start(0);\n      }, (e) => { console.log(e); });\n      console.log(promise);\n    }\n    \n    request.send();\n    \n    this.playing = false;\n    \n    this.handleVolumeChange = this.handleVolumeChange.bind(this);\n    this.handlePlayRateChange = this.handlePlayRateChange.bind(this);\n  }\n  \n  smoothAlgorithm(val) {\n\t  return Math.pow((val / 100), (Math.log(10) / Math.log(2)));\n  }\n  \n  togglePlay() {\n\t  this.playing = !this.playing;\n\t  this.playSoundLoop();\n  }\n  \n  playSoundLoop() {\n\tif (this.playing) {\n\t\tthis.gainNode.gain.value = this.smoothAlgorithm(this.state.volume);\n\t\taudioContext.resume();\t\t\n\t}\n\telse {\n\t\taudioContext.suspend();\n\t}\n  }\n  \n  onPlayRateStateChange(val) {\n    if (this.source !== undefined) {\n    \tvar smoothed = this.smoothAlgorithm(val);\n    \tthis.source.playbackRate.value = smoothed;\n    }\n    this.setState({ playRate: val }, () => { client.send(JSON.stringify(this.state)); });  \n  }\n  \n  onVolumeStateChange(val) {\n\tif (this.source !== undefined) {\n\t  this.gainNode.gain.value = this.smoothAlgorithm(val);\n\t}\n\tthis.setState({ volume: val }, () => { client.send(JSON.stringify(this.state)); });    \n  }\n  \n  componentDidMount() {\n\t  client.onopen = () => {\n\t   console.log('WebSocket Client Connected');\n\t  };\n\t  client.onmessage = (message) => {\n\t    const dataFromServer = JSON.parse(message.data);\n\t    this.handleVolumeChange(dataFromServer.volume);\n\t    this.handlePlayRateChange(dataFromServer.playRate);\n\t  };\n\t}  \n  \n  handleVolumeChange(volume) {\n\t  this.gainNode.gain.value = this.smoothAlgorithm(volume);\n\t  this.setState({ volume: volume });\n  }\n  \n  handlePlayRateChange(playRate) {\n\t  this.source.playbackRate.value = this.smoothAlgorithm(playRate);\n\t  this.setState({ playRate: playRate });\n  }\n  \n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <p>Volume</p>\n          <div style={sliderStyle}>\n          \t<Slider id=\"volSlider\" \n          \t  onChange={(e, val) => {\n          \t\t  this.onVolumeStateChange(val);\n          \t  } }\n          \t  min={0}\n              max={200}\n          \t  value={this.state.volume}\n          \t/>\n          </div>\n          <p>Playback Rate</p>\n          <div style={sliderStyle}>\n          \t<Slider id=\"playSlider\" \n          \t  onChange={(e, val) => {\n          \t\t  this.onPlayRateStateChange(val);\n          \t  } }\n          \t  min={0}\n              max={200}\n          \t  value={this.state.playRate}\n          \t/>\n          </div>\n          <button type=\"button\" onClick={(e, val) => { this.togglePlay(); }}>Begin</button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}