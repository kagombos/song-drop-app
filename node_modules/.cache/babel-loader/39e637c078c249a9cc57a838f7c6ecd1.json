{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\song-drop\\\\song-drop-app\\\\src\\\\control-sliders\\\\PlayRateSlider.js\";\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\n\nclass PlayRateSlider extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  componentDidUpdate() {\n    this.handlePlayRateChange(this.props.playRate);\n  }\n\n  smoothAlgorithm(val) {\n    return Math.pow(val / 100, Math.log(10) / Math.log(2));\n  }\n\n  onPlayRateStateChange(val) {\n    this.setState({\n      playRate: val\n    }, () => {\n      this.props.client.send(JSON.stringify(this.state));\n    });\n  }\n\n  handlePlayRateChange(playRate) {\n    this.props.source.playbackRate.value = this.smoothAlgorithm(playRate);\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    }; //this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\n\n    return React.createElement(\"div\", {\n      className: \"PlayRateSlider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, \"Play Rate\"), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        this.onPlayRateStateChange(val);\n      },\n      min: 0,\n      max: 200,\n      value: this.props.playRate,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default PlayRateSlider;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/song-drop/song-drop-app/src/control-sliders/PlayRateSlider.js"],"names":["React","Component","Slider","PlayRateSlider","constructor","props","componentDidUpdate","handlePlayRateChange","playRate","smoothAlgorithm","val","Math","pow","log","onPlayRateStateChange","setState","client","send","JSON","stringify","state","source","playbackRate","value","render","sliderStyle","e"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAuC;AAEtCG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEDC,EAAAA,kBAAkB,GAAG;AACpB,SAAKC,oBAAL,CAA0B,KAAKF,KAAL,CAAWG,QAArC;AACA;;AAEDC,EAAAA,eAAe,CAACC,GAAD,EAAM;AACnB,WAAOC,IAAI,CAACC,GAAL,CAAUF,GAAG,GAAG,GAAhB,EAAuBC,IAAI,CAACE,GAAL,CAAS,EAAT,IAAeF,IAAI,CAACE,GAAL,CAAS,CAAT,CAAtC,CAAP;AACD;;AAEDC,EAAAA,qBAAqB,CAACJ,GAAD,EAAM;AACvB,SAAKK,QAAL,CAAc;AAAEP,MAAAA,QAAQ,EAAEE;AAAZ,KAAd,EAAiC,MAAM;AAAE,WAAKL,KAAL,CAAWW,MAAX,CAAkBC,IAAlB,CAAuBC,IAAI,CAACC,SAAL,CAAe,KAAKC,KAApB,CAAvB;AAAqD,KAA9F;AACD;;AAEAb,EAAAA,oBAAoB,CAACC,QAAD,EAAW;AAC9B,SAAKH,KAAL,CAAWgB,MAAX,CAAkBC,YAAlB,CAA+BC,KAA/B,GAAuC,KAAKd,eAAL,CAAqBD,QAArB,CAAvC;AACA;;AAEJgB,EAAAA,MAAM,GAAG;AACR,UAAMC,WAAW,GAAG;AAClB,oBAAc,KADI;AAElB,qBAAe;AAFG,KAApB,CADQ,CAKR;;AACA,WACA;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAK,MAAA,KAAK,EAAEA,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,QAAX;AACE,MAAA,QAAQ,EAAE,CAACC,CAAD,EAAIhB,GAAJ,KAAY;AACrB,aAAKI,qBAAL,CAA2BJ,GAA3B;AACA,OAHH;AAIE,MAAA,GAAG,EAAE,CAJP;AAKG,MAAA,GAAG,EAAE,GALR;AAME,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWG,QANpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAFF,CADA;AAeA;;AA3CqC;;AA8CvC,eAAeL,cAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Slider } from '@material-ui/core';\r\n\r\nclass PlayRateSlider extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t    super(props);\r\n\t}\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handlePlayRateChange(this.props.playRate);\r\n\t}\r\n\t\r\n\tsmoothAlgorithm(val) {\r\n\t  return Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n\t}\r\n\t\r\n\tonPlayRateStateChange(val) {\r\n\t    this.setState({ playRate: val }, () => { this.props.client.send(JSON.stringify(this.state)); });  \r\n\t  }\r\n\t\r\n    handlePlayRateChange(playRate) {\r\n  \t  this.props.source.playbackRate.value = this.smoothAlgorithm(playRate);\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst sliderStyle = {\r\n\t\t  'marginLeft': '25%',\r\n\t\t  'marginRight': '25%',\r\n\t\t};\r\n\t\t//this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n\t\treturn (\r\n\t\t<div className=\"PlayRateSlider\">\r\n\t\t  <p>Play Rate</p>\r\n\t\t  <div style={sliderStyle}>\r\n\t\t  \t<Slider id=\"slider\" \r\n\t\t  \t  onChange={(e, val) => {\r\n\t\t  \t\t  this.onPlayRateStateChange(val);\r\n\t\t  \t  } }\r\n\t\t  \t  min={0}\r\n\t\t      max={200}\r\n\t\t  \t  value={this.props.playRate}\r\n\t\t  \t/>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlayRateSlider;"]},"metadata":{},"sourceType":"module"}