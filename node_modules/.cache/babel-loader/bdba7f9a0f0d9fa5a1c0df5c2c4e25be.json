{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\song-drop\\\\song-drop-app\\\\src\\\\Upload.js\";\nimport React, { Component } from \"react\";\nimport Dropzone from './dropzone/Dropzone';\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: []\n    };\n    this.uploadFiles = this.uploadFiles.bind(this);\n    this.sendRequest = this.sendRequest.bind(this);\n    this.onFilesAdded = this.onFilesAdded.bind(this);\n  }\n\n  onFilesAdded(files) {\n    this.setState(prevState => ({\n      files: prevState.files.concat(files)\n    }));\n    this.uploadFiles();\n  }\n\n  async uploadFiles() {\n    const promises = [];\n    this.state.files.forEach(file => {\n      promises.push(this.sendRequest(file));\n    });\n\n    try {\n      await Promise.all(promises);\n      this.setState({\n        files: undefined\n      });\n      console.log(\"AAA\");\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  sendRequest(file) {\n    return new Promise((res, rej) => {\n      const req = new XMLHttpRequest();\n      const formData = new FormData();\n      formData.append(\"file\", file, file.name);\n      req.open(\"POST\", \"http://localhost:5001/upload\");\n      req.send(formData);\n    });\n  }\n\n  render() {\n    return React.createElement(Dropzone, {\n      onFilesAdded: this.onFilesAdded,\n      disabled: false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/song-drop/song-drop-app/src/Upload.js"],"names":["React","Component","Dropzone","Upload","constructor","props","state","files","uploadFiles","bind","sendRequest","onFilesAdded","setState","prevState","concat","promises","forEach","file","push","Promise","all","undefined","console","log","e","res","rej","req","XMLHttpRequest","formData","FormData","append","name","open","send","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,qBAArB;;AAEA,MAAMC,MAAN,SAAqBF,SAArB,CAA+B;AAE7BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBD,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACD;;AAEDE,EAAAA,YAAY,CAACJ,KAAD,EAAQ;AAClB,SAAKK,QAAL,CAAcC,SAAS,KAAK;AAC1BN,MAAAA,KAAK,EAAEM,SAAS,CAACN,KAAV,CAAgBO,MAAhB,CAAuBP,KAAvB;AADmB,KAAL,CAAvB;AAGA,SAAKC,WAAL;AACD;;AAED,QAAMA,WAAN,GAAoB;AAClB,UAAMO,QAAQ,GAAG,EAAjB;AACA,SAAKT,KAAL,CAAWC,KAAX,CAAiBS,OAAjB,CAAyBC,IAAI,IAAI;AAC/BF,MAAAA,QAAQ,CAACG,IAAT,CAAc,KAAKR,WAAL,CAAiBO,IAAjB,CAAd;AACD,KAFD;;AAGA,QAAI;AACF,YAAME,OAAO,CAACC,GAAR,CAAYL,QAAZ,CAAN;AACA,WAAKH,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAEc;AAAT,OAAd;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACVF,MAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ;AACD;AACF;;AAEDd,EAAAA,WAAW,CAACO,IAAD,EAAO;AAChB,WAAO,IAAIE,OAAJ,CAAY,CAACM,GAAD,EAAMC,GAAN,KAAc;AAC/B,YAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;AAEA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,MAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBd,IAAxB,EAA8BA,IAAI,CAACe,IAAnC;AAEAL,MAAAA,GAAG,CAACM,IAAJ,CAAS,MAAT,EAAiB,8BAAjB;AACAN,MAAAA,GAAG,CAACO,IAAJ,CAASL,QAAT;AACD,KARM,CAAP;AASD;;AAEDM,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,QAAD;AAAU,MAAA,YAAY,EAAE,KAAKxB,YAA7B;AAA2C,MAAA,QAAQ,EAAE,KAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAlD4B;;AAsD/B,eAAeR,MAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Dropzone from './dropzone/Dropzone';\r\n\r\nclass Upload extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: []\r\n    };\r\n    \r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.sendRequest = this.sendRequest.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n  }\r\n  \r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n    this.uploadFiles();\r\n  }\r\n\r\n  async uploadFiles() {\r\n    const promises = [];\r\n    this.state.files.forEach(file => {\r\n      promises.push(this.sendRequest(file));\r\n    });\r\n    try {\r\n      await Promise.all(promises);\r\n      this.setState({ files: undefined });\r\n      console.log(\"AAA\");\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  sendRequest(file) {\r\n    return new Promise((res, rej) => {\r\n      const req = new XMLHttpRequest();\r\n      \r\n      const formData = new FormData();\r\n      formData.append(\"file\", file, file.name);\r\n      \r\n      req.open(\"POST\", \"http://localhost:5001/upload\");\r\n      req.send(formData);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropzone onFilesAdded={this.onFilesAdded} disabled={false} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Upload;"]},"metadata":{},"sourceType":"module"}