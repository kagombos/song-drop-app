{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    }; //this.audio = new Audio(require(\".\\\\sounds\\\\aaaaa.mp3\"));\n\n    this.audio = document.querySelector('audio');\n    console.log(this.audio);\n    this.track = audioContext.createMediaElementSource(this.audio);\n    console.log(this.track);\n    this.playing = false;\n    this.handleChange = this.handleChange.bind(this);\n    this.onchange();\n  }\n\n  togglePlay() {\n    this.playing = !this.playing;\n    this.playSoundLoop();\n  }\n\n  playSoundLoop() {\n    if (this.playing) {\n      this.track.volume = this.state.value / 100;\n      this.track.addEventListener('ended', () => {\n        this.track.currentTime = 0;\n        this.track.play();\n      }, false);\n      var playPromise = this.track.connect(audioContext.destination); //\t    if (playPromise !== undefined) {\n      //\t      playPromise\n      //\t        .then(_ => {\n      //\t        \tconsole.log(\"!\");\n      //\t        })\n      //\t        .catch(error => {\n      //\t          // Auto-play was prevented\n      //\t          // Show paused UI.\n      //\t          console.log(playPromise);\n      //\t          console.log(\"playback prevented\");\n      //\t        });\n      //\t    }\n    } else {\n      this.audio.currentTime = 0;\n      this.audio.pause();\n    }\n  }\n\n  onEditorStateChange(val) {\n    this.audio.volume = val / 100;\n    this.setState({\n      value: val\n    }, () => {\n      client.send(JSON.stringify(this.state));\n    });\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      this.handleChange(dataFromServer.value);\n    };\n  }\n\n  handleChange(value) {\n    this.audio.volume = value / 100;\n    this.setState({\n      value: value\n    });\n  }\n\n  onchange() {\n    var files = this.files;\n    console.log(files);\n    var file = URL.createObjectURL(files[0]);\n    source = file;\n    source.connect(audioContext.destination);\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, this.state.value), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        this.onEditorStateChange(val);\n      },\n      min: 0,\n      max: 100,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: (e, val) => {\n        this.togglePlay();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"Begin\")), React.createElement(\"input\", {\n      id: \"audio_file\",\n      type: \"file\",\n      accept: \"sounds/*\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"audio\", {\n      id: \"audio_player\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Slider","AudioContext","window","webkitAudioContext","audioContext","client","App","constructor","props","state","value","audio","document","querySelector","console","log","track","createMediaElementSource","playing","handleChange","bind","onchange","togglePlay","playSoundLoop","volume","addEventListener","currentTime","play","playPromise","connect","destination","pause","onEditorStateChange","val","setState","send","JSON","stringify","componentDidMount","onopen","onmessage","message","dataFromServer","parse","data","files","file","URL","createObjectURL","source","render","sliderStyle","e"],"mappings":"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","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\n\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tvalue: 0\n    };\n\n    //this.audio = new Audio(require(\".\\\\sounds\\\\aaaaa.mp3\"));\n    this.audio = document.querySelector('audio');\n    console.log(this.audio);\n    this.track = audioContext.createMediaElementSource(this.audio);\n    console.log(this.track);\n    this.playing = false;\n    \n    this.handleChange = this.handleChange.bind(this);\n    this.onchange();\n    \n    \n  }\n  \n  togglePlay() {\n\t  this.playing = !this.playing;\n\t  this.playSoundLoop();\n  }\n  \n  playSoundLoop() {\n\tif (this.playing) {\n\t\tthis.track.volume = this.state.value / 100;\n\t\t\n\t\tthis.track.addEventListener('ended', () => {\n\t\t\tthis.track.currentTime = 0;\n\t\t\tthis.track.play();\n\t\t}, false);\n\t\tvar playPromise = this.track.connect(audioContext.destination);\n\n//\t    if (playPromise !== undefined) {\n//\t      playPromise\n//\t        .then(_ => {\n//\t        \tconsole.log(\"!\");\n//\t        })\n//\t        .catch(error => {\n//\t          // Auto-play was prevented\n//\t          // Show paused UI.\n//\t          console.log(playPromise);\n//\t          console.log(\"playback prevented\");\n//\t        });\n//\t    }\n\t}\n\telse {\n\t\tthis.audio.currentTime = 0;\n\t\tthis.audio.pause();\n\t}\n  }\n  \n  onEditorStateChange(val) {\n\tthis.audio.volume = val / 100;\n\tthis.setState({ value: val }, () => { client.send(JSON.stringify(this.state)); });    \n  }\n  \n  componentDidMount() {\n\t  client.onopen = () => {\n\t   console.log('WebSocket Client Connected');\n\t  };\n\t  client.onmessage = (message) => {\n\t    const dataFromServer = JSON.parse(message.data);\n\t    this.handleChange(dataFromServer.value);\n\t  };\n\t}  \n  \n  handleChange(value) {\n\t  this.audio.volume = value / 100;\n\t  this.setState({ value: value });\n  }\n  \n  onchange() {\n\t  var files = this.files;\n\t  console.log(files);\n\t  var file = URL.createObjectURL(files[0]); \n\t  source = file; \n\t  source.connect(audioContext.destination);\n  };\n\n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <h1 id=\"value\">\n          \t{this.state.value}\n          </h1>\n          <div style={sliderStyle}>\n          \t<Slider id=\"slider\" \n          \t  onChange={(e, val) => {\n          \t\t  this.onEditorStateChange(val);\n          \t  } }\n          \t  min={0}\n              max={100}\n          \t  value={this.state.value}\n          \t/>\n          </div>\n          <button type=\"button\" onClick={(e, val) => { this.togglePlay(); }}>Begin</button>\n        </center>\n        <input id=\"audio_file\" type=\"file\" accept=\"sounds/*\" />\n        <audio id=\"audio_player\" />\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}