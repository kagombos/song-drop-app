{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.source = audioContext.createBufferSource();\n    var url = \"aaaaa.mp3\";\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n\n    request.onload = () => {\n      console.log(request.response); //var soundBuffer = audioContext.createBuffer(request.response, true);\n      //source.buffer = request.response;\n\n      request.send();\n      audioContext.decodeAudioData(request.response).then(data => {\n        this.source.buffer = data;\n      });\n    }; //this.audio = new Audio(require(\".\\\\sounds\\\\aaaaa.mp3\"));\n    //    this.audio = document.querySelector('audio');\n    //    console.log(this.audio);\n    //    this.track = audioContext.createMediaElementSource(this.audio);\n    //    console.log(this.track);\n\n\n    this.playing = false;\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  togglePlay() {\n    this.playing = !this.playing;\n    this.playSoundLoop();\n  }\n\n  playSoundLoop() {\n    this.source.connect(audioContext.destination);\n\n    if (this.playing) {\n      this.source.volume = this.state.value / 100;\n      this.source.addEventListener('ended', () => {\n        this.source.currentTime = 0;\n        this.source.play();\n      }, false);\n      var playPromise = this.source.connect(audioContext.destination); //\t    if (playPromise !== undefined) {\n      //\t      playPromise\n      //\t        .then(_ => {\n      //\t        \tconsole.log(\"!\");\n      //\t        })\n      //\t        .catch(error => {\n      //\t          // Auto-play was prevented\n      //\t          // Show paused UI.\n      //\t          console.log(playPromise);\n      //\t          console.log(\"playback prevented\");\n      //\t        });\n      //\t    }\n    } else {\n      this.source.currentTime = 0;\n      this.source.pause();\n    }\n  }\n\n  onEditorStateChange(val) {\n    if (this.source !== undefined) {\n      this.source.volume = val / 100;\n    }\n\n    this.setState({\n      value: val\n    }, () => {\n      client.send(JSON.stringify(this.state));\n    });\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      this.handleChange(dataFromServer.value);\n    };\n  }\n\n  handleChange(value) {\n    //this.audio.volume = value / 100;\n    this.setState({\n      value: value\n    });\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, this.state.value), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        this.onEditorStateChange(val);\n      },\n      min: 0,\n      max: 100,\n      value: this.state.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: (e, val) => {\n        this.togglePlay();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Begin\")));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Slider","AudioContext","window","webkitAudioContext","audioContext","client","App","constructor","props","state","value","source","createBufferSource","url","request","XMLHttpRequest","open","responseType","onload","console","log","response","send","decodeAudioData","then","data","buffer","playing","handleChange","bind","togglePlay","playSoundLoop","connect","destination","volume","addEventListener","currentTime","play","playPromise","pause","onEditorStateChange","val","undefined","setState","JSON","stringify","componentDidMount","onopen","onmessage","message","dataFromServer","parse","render","sliderStyle","e"],"mappings":"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","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\n\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\nconst audioContext = new AudioContext();\n\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\n\nclass App extends Component {\n\t\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tvalue: 0\n    };\n    \n    this.source = audioContext.createBufferSource();    \n    var url = \"aaaaa.mp3\"\n    var request = new XMLHttpRequest();\n    request.open(\"GET\", url, true);\n    request.responseType = \"arraybuffer\";\n    \n    request.onload = () => {\n      console.log(request.response);\n      //var soundBuffer = audioContext.createBuffer(request.response, true);\n      //source.buffer = request.response;\n      \n      request.send();\n      \n      audioContext.decodeAudioData(request.response).then((data) => {\n    \tthis.source.buffer = data; \n      });\n    }\n\n    //this.audio = new Audio(require(\".\\\\sounds\\\\aaaaa.mp3\"));\n//    this.audio = document.querySelector('audio');\n//    console.log(this.audio);\n//    this.track = audioContext.createMediaElementSource(this.audio);\n//    console.log(this.track);\n    this.playing = false;\n    \n    this.handleChange = this.handleChange.bind(this);\n  }\n  \n  togglePlay() {\n\t  this.playing = !this.playing;\n\t  this.playSoundLoop();\n  }\n  \n  playSoundLoop() {\n\tthis.source.connect(audioContext.destination);\n\tif (this.playing) {\n\t\tthis.source.volume = this.state.value / 100;\n\t\t\n\t\tthis.source.addEventListener('ended', () => {\n\t\t\tthis.source.currentTime = 0;\n\t\t\tthis.source.play();\n\t\t}, false);\n\t\tvar playPromise = this.source.connect(audioContext.destination);\n\n//\t    if (playPromise !== undefined) {\n//\t      playPromise\n//\t        .then(_ => {\n//\t        \tconsole.log(\"!\");\n//\t        })\n//\t        .catch(error => {\n//\t          // Auto-play was prevented\n//\t          // Show paused UI.\n//\t          console.log(playPromise);\n//\t          console.log(\"playback prevented\");\n//\t        });\n//\t    }\n\t}\n\telse {\n\t\tthis.source.currentTime = 0;\n\t\tthis.source.pause();\n\t}\n  }\n  \n  onEditorStateChange(val) {\n\tif (this.source !== undefined) {\n\t  this.source.volume = val / 100;\n\t}\n\tthis.setState({ value: val }, () => { client.send(JSON.stringify(this.state)); });    \n  }\n  \n  componentDidMount() {\n\t  client.onopen = () => {\n\t   console.log('WebSocket Client Connected');\n\t  };\n\t  client.onmessage = (message) => {\n\t    const dataFromServer = JSON.parse(message.data);\n\t    this.handleChange(dataFromServer.value);\n\t  };\n\t}  \n  \n  handleChange(value) {\n\t  //this.audio.volume = value / 100;\n\t  this.setState({ value: value });\n  }\n  \n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <h1 id=\"value\">\n          \t{this.state.value}\n          </h1>\n          <div style={sliderStyle}>\n          \t<Slider id=\"slider\" \n          \t  onChange={(e, val) => {\n          \t\t  this.onEditorStateChange(val);\n          \t  } }\n          \t  min={0}\n              max={100}\n          \t  value={this.state.value}\n          \t/>\n          </div>\n          <button type=\"button\" onClick={(e, val) => { this.togglePlay(); }}>Begin</button>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}