{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\n\nconst axios = require('axios').default;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        \"value\": 0\n      }\n    };\n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    this.value = 0;\n    this.setValue = 0;\n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n\n  componentWillMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      const stateToChange = {};\n\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage;\n      }\n\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({});\n    };\n  }\n\n  componentDidMount() {\n    this.eventSource.onmessage = e => {\n      this.updateNumber(JSON.parse(e.data).value);\n    };\n  }\n\n  updateNumber(value) {\n    this.value = value;\n    document.getElementById(\"value\").innerHTML = this.value;\n  }\n\n  sendChange(momentList) {\n    const response = axios.post(\"http://localhost:5000/moments\", {\n      value: momentList\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, this.value), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        this.updateNumber(val);\n\n        if (new Date().getTime() - this.sliderChangeTime > 50) {\n          this.momentList.push(new Moment(val));\n          this.sliderChangeTime = new Date().getTime();\n        }\n      },\n      onChangeCommitted: (e, val) => {\n        this.momentList.push(new Moment(val));\n        this.sendChange(this.momentList);\n        console.log(this.momentList);\n        console.log(this.momentList[0].time);\n        this.momentList = [];\n      },\n      min: 0,\n      max: 100,\n      value: this.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","Slider","Moment","axios","require","default","App","constructor","props","state","data","momentList","Array","sliderChangeTime","value","setValue","eventSource","EventSource","componentWillMount","client","onopen","console","log","onmessage","message","dataFromServer","JSON","parse","stateToChange","type","currentUsers","Object","values","users","text","editorContent","contentDefaultMessage","userActivity","setState","componentDidMount","e","updateNumber","document","getElementById","innerHTML","sendChange","response","post","headers","render","sliderStyle","val","Date","getTime","push","time"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AAAC,iBAAS;AAAV;AADK,KAAb;AAIA,SAAKC,UAAL,GAAkB,IAAIC,KAAJ,EAAlB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AAEA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AAEA,SAAKC,WAAL,GAAmB,IAAIC,WAAJ,CAAgB,8BAAhB,CAAnB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACpBC,IAAAA,MAAM,CAACC,MAAP,GAAgB,MAAM;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACA,KAFD;;AAGAH,IAAAA,MAAM,CAACI,SAAP,GAAoBC,OAAD,IAAa;AAC9B,YAAMC,cAAc,GAAGC,IAAI,CAACC,KAAL,CAAWH,OAAO,CAACd,IAAnB,CAAvB;AACA,YAAMkB,aAAa,GAAG,EAAtB;;AACA,UAAIH,cAAc,CAACI,IAAf,KAAwB,WAA5B,EAAyC;AACvCD,QAAAA,aAAa,CAACE,YAAd,GAA6BC,MAAM,CAACC,MAAP,CAAcP,cAAc,CAACf,IAAf,CAAoBuB,KAAlC,CAA7B;AACD,OAFD,MAEO,IAAIR,cAAc,CAACI,IAAf,KAAwB,eAA5B,EAA6C;AAClDD,QAAAA,aAAa,CAACM,IAAd,GAAqBT,cAAc,CAACf,IAAf,CAAoByB,aAApB,IAAqCC,qBAA1D;AACD;;AACDR,MAAAA,aAAa,CAACS,YAAd,GAA6BZ,cAAc,CAACf,IAAf,CAAoB2B,YAAjD;AACA,WAAKC,QAAL,CAAc,EAAd;AAED,KAXD;AAYD;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,SAAKvB,WAAL,CAAiBO,SAAjB,GAA6BiB,CAAC,IAAI;AAChC,WAAKC,YAAL,CAAkBf,IAAI,CAACC,KAAL,CAAWa,CAAC,CAAC9B,IAAb,EAAmBI,KAArC;AACD,KAFD;AAGD;;AAED2B,EAAAA,YAAY,CAAC3B,KAAD,EAAQ;AAClB,SAAKA,KAAL,GAAaA,KAAb;AACA4B,IAAAA,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,SAAjC,GAA6C,KAAK9B,KAAlD;AACD;;AAED+B,EAAAA,UAAU,CAAClC,UAAD,EAAa;AACxB,UAAMmC,QAAQ,GAAG3C,KAAK,CAAC4C,IAAN,CACf,+BADe,EAEf;AAAEjC,MAAAA,KAAK,EAAEH;AAAT,KAFe,EAGf;AAAEqC,MAAAA,OAAO,EACR;AAAE,wBAAgB;AAAlB;AADD,KAHe,CAAjB;AAME;;AAEDC,EAAAA,MAAM,GAAG;AACV,UAAMC,WAAW,GAAG;AAClB,oBAAc,KADI;AAElB,qBAAe;AAFG,KAApB;AAIG,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAI,MAAA,EAAE,EAAC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKpC,KADP,CADF,EAIE;AAAK,MAAA,KAAK,EAAEoC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AAAQ,MAAA,EAAE,EAAC,QAAX;AACE,MAAA,QAAQ,EAAG,CAACV,CAAD,EAAIW,GAAJ,KAAY;AACtB,aAAKV,YAAL,CAAkBU,GAAlB;;AACA,YAAK,IAAIC,IAAJ,GAAWC,OAAX,EAAD,GAAyB,KAAKxC,gBAA9B,GAAiD,EAArD,EAAyD;AACxD,eAAKF,UAAL,CAAgB2C,IAAhB,CAAqB,IAAIpD,MAAJ,CAAWiD,GAAX,CAArB;AACC,eAAKtC,gBAAL,GAAyB,IAAIuC,IAAJ,EAAD,CAAaC,OAAb,EAAxB;AACD;AAED,OARH;AASE,MAAA,iBAAiB,EAAG,CAACb,CAAD,EAAIW,GAAJ,KAAY;AAC/B,aAAKxC,UAAL,CAAgB2C,IAAhB,CAAqB,IAAIpD,MAAJ,CAAWiD,GAAX,CAArB;AACA,aAAKN,UAAL,CAAgB,KAAKlC,UAArB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,UAAjB;AACAU,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKX,UAAL,CAAgB,CAAhB,EAAmB4C,IAA/B;AACA,aAAK5C,UAAL,GAAkB,EAAlB;AACA,OAfH;AAgBE,MAAA,GAAG,EAAE,CAhBP;AAiBG,MAAA,GAAG,EAAE,GAjBR;AAkBE,MAAA,KAAK,EAAE,KAAKG,KAlBd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJF,CADF,CADF;AA+BD;;AA1FyB;;AA6F5B,eAAeR,GAAf","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\nconst axios = require('axios').default;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\"value\": 0}\n    }\n    \n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    \n    this.value = 0;\n    this.setValue = 0;\n    \n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n  \n  componentWillMount() {\n\t  client.onopen = () => {\n\t   console.log('WebSocket Client Connected');\n\t  };\n\t  client.onmessage = (message) => {\n\t    const dataFromServer = JSON.parse(message.data);\n\t    const stateToChange = {};\n\t    if (dataFromServer.type === \"userevent\") {\n\t      stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n\t    } else if (dataFromServer.type === \"contentchange\") {\n\t      stateToChange.text = dataFromServer.data.editorContent || contentDefaultMessage;\n\t    }\n\t    stateToChange.userActivity = dataFromServer.data.userActivity;\n\t    this.setState({\n\t    });\n\t  };\n\t}\n  \n  componentDidMount() {\n    this.eventSource.onmessage = e => {\n      this.updateNumber(JSON.parse(e.data).value);\n    }\n  }\n\n  updateNumber(value) {\n    this.value = value;\n    document.getElementById(\"value\").innerHTML = this.value;\n  }\n  \n  sendChange(momentList) {\n\tconst response = axios.post(\n\t  \"http://localhost:5000/moments\",\n\t  { value: momentList },\n\t  { headers: \n\t  \t{ 'Content-Type': 'application/json'}}\n    );\n  }\n\n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <h1 id=\"value\">\n          \t{this.value}\n          </h1>\n          <div style={sliderStyle}>\n          \t<Slider id=\"slider\" \n          \t  onChange={ (e, val) => {\n          \t\t  this.updateNumber(val);\n          \t\t  if ((new Date().getTime()) - this.sliderChangeTime > 50) {\n          \t\t\t  this.momentList.push(new Moment(val)); \n            \t\t  this.sliderChangeTime = (new Date()).getTime();\n          \t\t  }\n          \t\t  \n          \t  } }\n          \t  onChangeCommitted={ (e, val) => { \n          \t\t  this.momentList.push(new Moment(val));\n          \t\t  this.sendChange(this.momentList);\n          \t\t  console.log(this.momentList);\n          \t\t  console.log(this.momentList[0].time);\n          \t\t  this.momentList = [];\n          \t  } }\n          \t  min={0}\n              max={100}\n          \t  value={this.value}\n          \t/>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}