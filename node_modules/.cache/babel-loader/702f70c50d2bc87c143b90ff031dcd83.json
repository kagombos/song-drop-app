{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\n\nconst axios = require('axios').default;\n\nconst client = new W3CWebSocket('ws://127.0.0.1:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0\n    };\n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    this.value = 0;\n    this.setValue = 0;\n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n\n  onEditorStateChange(val) {\n    client.send(JSON.stringify({\n      value: val\n    }));\n  }\n\n  componentDidMount() {\n    client.onopen = () => {\n      console.log('WebSocket Client Connected');\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log(dataFromServer);\n      const stateToChange = {};\n\n      if (dataFromServer.type === \"userevent\") {\n        stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n      } else if (dataFromServer.type === \"contentchange\") {\n        stateToChange.text = dataFromServer.data.editorContent;\n      }\n\n      stateToChange.userActivity = dataFromServer.data.userActivity;\n      this.setState({\n        dataFromServer\n      });\n    };\n  } //  componentDidMount() {\n  //    this.eventSource.onmessage = e => {\n  //      this.updateNumber(JSON.parse(e.data).value);\n  //    }\n  //  }\n\n\n  updateNumber(value) {\n    this.value = value;\n    document.getElementById(\"value\").innerHTML = this.value;\n  }\n\n  sendChange(momentList) {\n    const response = axios.post(\"http://localhost:5000/moments\", {\n      value: momentList\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"value\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, this.value), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      id: \"slider\",\n      onChange: (e, val) => {\n        this.updateNumber(val);\n        this.onEditorStateChange(val); //          \t\t  this.updateNumber(val);\n        //          \t\t  if ((new Date().getTime()) - this.sliderChangeTime > 50) {\n        //          \t\t\t  this.momentList.push(new Moment(val)); \n        //            \t\t  this.sliderChangeTime = (new Date()).getTime();\n        //          \t\t  }\n      } //          \t  onChangeCommitted={ (e, val) => { \n      //          \t\t  this.momentList.push(new Moment(val));\n      //          \t\t  this.sendChange(this.momentList);\n      //          \t\t  console.log(this.momentList);\n      //          \t\t  console.log(this.momentList[0].time);\n      //          \t\t  this.momentList = [];\n      //          \t  } }\n      ,\n      min: 0,\n      max: 100,\n      value: this.value,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","w3cwebsocket","W3CWebSocket","Slider","Moment","axios","require","default","client","App","constructor","props","state","value","momentList","Array","sliderChangeTime","setValue","eventSource","EventSource","onEditorStateChange","val","send","JSON","stringify","componentDidMount","onopen","console","log","onmessage","message","dataFromServer","parse","data","stateToChange","type","currentUsers","Object","values","users","text","editorContent","userActivity","setState","updateNumber","document","getElementById","innerHTML","sendChange","response","post","headers","render","sliderStyle","e"],"mappings":"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","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\nconst axios = require('axios').default;\n\nconst client = new W3CWebSocket('ws://127.0.0.1:5000');\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tvalue: 0\n    }\n    \n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    \n    this.value = 0;\n    this.setValue = 0;\n    \n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n  \n  onEditorStateChange(val) {\n    client.send(JSON.stringify({\n      value: val\n    }));\n  }\n  \n  componentDidMount() {\n\t  client.onopen = () => {\n\t   console.log('WebSocket Client Connected');\n\t  };\n\t  client.onmessage = (message) => {\n\t    const dataFromServer = JSON.parse(message.data);\n\t    console.log(dataFromServer);\n\t    const stateToChange = {};\n\t    if (dataFromServer.type === \"userevent\") {\n\t      stateToChange.currentUsers = Object.values(dataFromServer.data.users);\n\t    } else if (dataFromServer.type === \"contentchange\") {\n\t      stateToChange.text = dataFromServer.data.editorContent;\n\t    }\n\t    stateToChange.userActivity = dataFromServer.data.userActivity;\n\t    this.setState({\n\t    \tdataFromServer\n\t    });\n\t  };\n\t}\n  \n//  componentDidMount() {\n//    this.eventSource.onmessage = e => {\n//      this.updateNumber(JSON.parse(e.data).value);\n//    }\n//  }\n\n  updateNumber(value) {\n    this.value = value;\n    document.getElementById(\"value\").innerHTML = this.value;\n  }\n  \n  sendChange(momentList) {\n\tconst response = axios.post(\n\t  \"http://localhost:5000/moments\",\n\t  { value: momentList },\n\t  { headers: \n\t  \t{ 'Content-Type': 'application/json'}}\n    );\n  }\n\n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <h1 id=\"value\">\n          \t{this.value}\n          </h1>\n          <div style={sliderStyle}>\n          \t<Slider id=\"slider\" \n          \t  onChange={ (e, val) => {\n          \t\t  this.updateNumber(val);\n          \t\t  this.onEditorStateChange(val);\n//          \t\t  this.updateNumber(val);\n//          \t\t  if ((new Date().getTime()) - this.sliderChangeTime > 50) {\n//          \t\t\t  this.momentList.push(new Moment(val)); \n//            \t\t  this.sliderChangeTime = (new Date()).getTime();\n//          \t\t  }\n          \t\t  \n          \t  } }\n//          \t  onChangeCommitted={ (e, val) => { \n//          \t\t  this.momentList.push(new Moment(val));\n//          \t\t  this.sendChange(this.momentList);\n//          \t\t  console.log(this.momentList);\n//          \t\t  console.log(this.momentList[0].time);\n//          \t\t  this.momentList = [];\n//          \t  } }\n          \t  min={0}\n              max={100}\n          \t  value={this.value}\n          \t/>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}