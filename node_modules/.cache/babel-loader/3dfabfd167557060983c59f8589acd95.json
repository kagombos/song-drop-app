{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\if994249\\\\eclipse-workspace\\\\scream-together\\\\scream-together-app\\\\src\\\\App.js\";\n// src/App.js\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\n\nconst axios = require('axios').default;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\n        \"value\": 0\n      }\n    };\n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    this.value = 0;\n    this.setValue = 0;\n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n\n  componentDidMount() {//    this.eventSource.onmessage = e => {\n    //      this.updateNumber(JSON.parse(e.data).value);\n    //    }\n  }\n\n  updateNumber(value) {\n    console.log(value);\n    this.value = value;\n  }\n\n  sendChange(value) {\n    this.value = value;\n    const response = axios.post(\"http://localhost:5000/events\", {\n      value: value\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n  }\n\n  render() {\n    const sliderStyle = {\n      'marginLeft': '25%',\n      'marginRight': '25%'\n    };\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"center\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.value), React.createElement(\"div\", {\n      style: sliderStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Slider, {\n      onChange: (e, val) => {\n        this.updateNumber(val);\n\n        if (new Date().getTime() - this.sliderChangeTime > 50) {\n          this.momentList.push(new Moment(val));\n          this.sliderChangeTime = new Date().getTime();\n        }\n      },\n      onChangeCommitted: (e, val) => {\n        this.setValue = val;\n        this.momentList.push(new Moment(val));\n        console.log(this.momentList);\n        console.log(this.momentList[0].time);\n        this.momentList = [];\n      },\n      min: 0,\n      max: 100,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/if994249/eclipse-workspace/scream-together/scream-together-app/src/App.js"],"names":["React","Component","Slider","Moment","axios","require","default","App","constructor","props","state","data","momentList","Array","sliderChangeTime","value","setValue","eventSource","EventSource","componentDidMount","updateNumber","console","log","sendChange","response","post","headers","render","sliderStyle","e","val","Date","getTime","push","time"],"mappings":";AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AAEA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAC1BO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AAAC,iBAAS;AAAV;AADK,KAAb;AAIA,SAAKC,UAAL,GAAkB,IAAIC,KAAJ,EAAlB;AACA,SAAKC,gBAAL,GAAwB,CAAxB;AAEA,SAAKC,KAAL,GAAa,CAAb;AACA,SAAKC,QAAL,GAAgB,CAAhB;AAEA,SAAKC,WAAL,GAAmB,IAAIC,WAAJ,CAAgB,8BAAhB,CAAnB;AACD;;AAEDC,EAAAA,iBAAiB,GAAG,CACtB;AACA;AACA;AACG;;AAEDC,EAAAA,YAAY,CAACL,KAAD,EAAQ;AACrBM,IAAAA,OAAO,CAACC,GAAR,CAAYP,KAAZ;AACG,SAAKA,KAAL,GAAaA,KAAb;AACD;;AAEDQ,EAAAA,UAAU,CAACR,KAAD,EAAQ;AACnB,SAAKA,KAAL,GAAaA,KAAb;AACA,UAAMS,QAAQ,GAAGpB,KAAK,CAACqB,IAAN,CACf,8BADe,EAEf;AAAEV,MAAAA,KAAK,EAAEA;AAAT,KAFe,EAGf;AAAEW,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAAX,KAHe,CAAjB;AAKE;;AAEDC,EAAAA,MAAM,GAAG;AACV,UAAMC,WAAW,GAAG;AAClB,oBAAc,KADI;AAElB,qBAAe;AAFG,KAApB;AAIG,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,KAAKb,KADP,CADF,EAIE;AAAK,MAAA,KAAK,EAAEa,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACC,oBAAC,MAAD;AACE,MAAA,QAAQ,EAAG,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACtB,aAAKV,YAAL,CAAkBU,GAAlB;;AACA,YAAK,IAAIC,IAAJ,GAAWC,OAAX,EAAD,GAAyB,KAAKlB,gBAA9B,GAAiD,EAArD,EAAyD;AACxD,eAAKF,UAAL,CAAgBqB,IAAhB,CAAqB,IAAI9B,MAAJ,CAAW2B,GAAX,CAArB;AACC,eAAKhB,gBAAL,GAAyB,IAAIiB,IAAJ,EAAD,CAAaC,OAAb,EAAxB;AACD;AAED,OARH;AASE,MAAA,iBAAiB,EAAG,CAACH,CAAD,EAAIC,GAAJ,KAAY;AAC/B,aAAKd,QAAL,GAAgBc,GAAhB;AACA,aAAKlB,UAAL,CAAgBqB,IAAhB,CAAqB,IAAI9B,MAAJ,CAAW2B,GAAX,CAArB;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,UAAjB;AACAS,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAKV,UAAL,CAAgB,CAAhB,EAAmBsB,IAA/B;AACA,aAAKtB,UAAL,GAAkB,EAAlB;AACA,OAfH;AAgBE,MAAA,GAAG,EAAE,CAhBP;AAiBG,MAAA,GAAG,EAAE,GAjBR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CAJF,CADF,CADF;AA8BD;;AAvEyB;;AA0E5B,eAAeL,GAAf","sourcesContent":["// src/App.js\n\nimport React, { Component } from \"react\";\nimport { Slider } from '@material-ui/core';\nimport Moment from './moment';\nconst axios = require('axios').default;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: {\"value\": 0}\n    }\n    \n    this.momentList = new Array();\n    this.sliderChangeTime = 0;\n    \n    this.value = 0;\n    this.setValue = 0;\n    \n    this.eventSource = new EventSource(\"http://localhost:5000/events\");\n  }\n  \n  componentDidMount() {\n//    this.eventSource.onmessage = e => {\n//      this.updateNumber(JSON.parse(e.data).value);\n//    }\n  }\n\n  updateNumber(value) {\n\tconsole.log(value);\n    this.value = value;\n  }\n  \n  sendChange(value) {\n\tthis.value = value;\n\tconst response = axios.post(\n\t  \"http://localhost:5000/events\",\n\t  { value: value },\n\t  { headers: { 'Content-Type': 'application/json' }}\n    );\n  }\n\n  render() {\n\tconst sliderStyle = {\n\t  'marginLeft': '25%',\n\t  'marginRight': '25%',\n\t};\n    return (\n      <div className=\"App\">\n        <center>\n          <h1>\n          \t{this.value}\n          </h1>\n          <div style={sliderStyle}>\n          \t<Slider \n          \t  onChange={ (e, val) => {\n          \t\t  this.updateNumber(val);\n          \t\t  if ((new Date().getTime()) - this.sliderChangeTime > 50) {\n          \t\t\t  this.momentList.push(new Moment(val)); \n            \t\t  this.sliderChangeTime = (new Date()).getTime();\n          \t\t  }\n          \t\t  \n          \t  } }\n          \t  onChangeCommitted={ (e, val) => { \n          \t\t  this.setValue = val;\n          \t\t  this.momentList.push(new Moment(val));\n          \t\t  console.log(this.momentList);\n          \t\t  console.log(this.momentList[0].time);\n          \t\t  this.momentList = [];\n          \t  } }\n          \t  min={0}\n              max={100}\n          \t/>\n          </div>\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}