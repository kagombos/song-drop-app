{"version":3,"sources":["control-sliders/PlayRateSlider.js","control-sliders/VolumeSlider.js","dropzone/Dropzone.js","Upload.js","App.js","serviceWorker.js","index.js"],"names":["PlayRateSlider","this","handlePlayRateChange","props","playRate","val","Math","pow","log","setState","client","send","JSON","stringify","state","source","playbackRate","value","smoothAlgorithm","className","style","Slider","id","onChange","e","onPlayRateStateChange","min","max","Component","VolumeSlider","handleVolumeChange","volume","gainNode","gain","onVolumeStateChange","Dropzone","highlight","fileInputRef","React","createRef","openFileDialog","bind","onFilesAdded","onDragOver","onDragLeave","onDrop","disabled","current","click","evt","files","target","array","fileListToArray","list","i","length","push","item","preventDefault","hightlight","event","dataTransfer","onClick","alt","src","ref","type","multiple","Upload","uploadFiles","sendRequest","prevState","concat","setTimeout","console","promises","forEach","file","Promise","all","undefined","res","rej","req","XMLHttpRequest","formData","FormData","append","name","open","audioContext","window","AudioContext","webkitAudioContext","W3CWebSocket","App","pitch","createBufferSource","buttonLabel","createGain","connect","destination","getSound","playing","togglePlay","request","responseType","a","onended","onload","decodeAudioData","response","then","data","buffer","start","playSoundLoop","elem","document","getElementById","resume","innerHTML","suspend","onopen","onmessage","message","dataFromServer","parse","Boolean","location","hostname","match","ReactDOM","render","backgroundImage","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5d9580c2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Slider } from '@material-ui/core';\r\n\r\nclass PlayRateSlider extends Component {\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handlePlayRateChange(this.props.playRate);\r\n\t}\r\n\t\r\n\tsmoothAlgorithm(val) {\r\n\t  return Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n\t}\r\n\t\r\n\tonPlayRateStateChange(val) {\r\n\t    this.setState({ playRate: val }, () => { this.props.client.send(JSON.stringify(this.state)); });  \r\n\t  }\r\n\t\r\n    handlePlayRateChange(playRate) {\r\n  \t  this.props.source.playbackRate.value = this.smoothAlgorithm(playRate);\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst sliderStyle = {\r\n\t\t  'marginLeft': '25%',\r\n\t\t  'marginRight': '25%',\r\n\t\t};\r\n\t\t//this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n\t\treturn (\r\n\t\t<div className=\"PlayRateSlider\">\r\n\t\t  <p>Play Rate</p>\r\n\t\t  <div style={sliderStyle}>\r\n\t\t  \t<Slider id=\"slider\" \r\n\t\t  \t  onChange={(e, val) => {\r\n\t\t  \t\t  this.onPlayRateStateChange(val);\r\n\t\t  \t  } }\r\n\t\t  \t  min={0}\r\n\t\t      max={200}\r\n\t\t  \t  value={this.props.playRate}\r\n\t\t  \t/>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PlayRateSlider;","import React, { Component } from \"react\";\r\nimport { Slider } from '@material-ui/core';\r\n\r\nclass VolumeSlider extends Component {\r\n\t\r\n\tcomponentDidUpdate() {\r\n\t\tthis.handleVolumeChange(this.props.volume);\r\n\t}\r\n\t\r\n\tsmoothAlgorithm(val) {\r\n\t  return Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n\t}\r\n\t\r\n\tonVolumeStateChange(val) {\r\n\t\tthis.setState({ volume: val }, () => { this.props.client.send(JSON.stringify(this.state)); });    \r\n\t}\r\n\t\r\n    handleVolumeChange(volume) {\r\n    \tthis.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n    }\r\n\t\r\n\trender() {\r\n\t\tconst sliderStyle = {\r\n\t\t  'marginLeft': '25%',\r\n\t\t  'marginRight': '25%',\r\n\t\t};\r\n\t\t//this.props.gainNode.gain.value = this.smoothAlgorithm(volume);\r\n\t\treturn (\r\n\t\t<div className=\"VolumeSlider\">\r\n\t\t  <p>Volume</p>\r\n\t\t  <div style={sliderStyle}>\r\n\t\t  \t<Slider id=\"slider\" \r\n\t\t  \t  onChange={(e, val) => {\r\n\t\t  \t\t  this.onVolumeStateChange(val);\r\n\t\t  \t  } }\r\n\t\t  \t  min={0}\r\n\t\t      max={200}\r\n\t\t  \t  value={this.props.volume}\r\n\t\t  \t/>\r\n\t\t  </div>\r\n\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default VolumeSlider;","import React, { Component } from 'react'\r\nimport './Dropzone.css'\r\n\r\nclass Dropzone extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { highlight: false }\r\n    this.fileInputRef = React.createRef();\r\n    \r\n    this.openFileDialog = this.openFileDialog.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n    this.onDragOver = this.onDragOver.bind(this);\r\n    this.onDragLeave = this.onDragLeave.bind(this);\r\n    this.onDrop = this.onDrop.bind(this);\r\n  }\r\n  \r\n  openFileDialog() {\r\n\t  if (this.props.disabled) return;\r\n\t  this.fileInputRef.current.click();\r\n  }\r\n  \r\n  onFilesAdded(evt) {\r\n\t  if (this.props.disabled) return;\r\n\t  const files = evt.target.files;\r\n\t  if (this.props.onFilesAdded) {\r\n\t\t  const array = this.fileListToArray(files);\r\n\t\t  this.props.onFilesAdded(array);\r\n\t  }\r\n  }\r\n  \r\n  fileListToArray(list) {\r\n\t  const array = [];\r\n\t  for (var i = 0; i < list.length; i++) {\r\n\t\t  array.push(list.item(i));\r\n\t  }\r\n\t  return array;\r\n  }\r\n  \r\n  onDragOver(evt) {\r\n\t  evt.preventDefault();\r\n\r\n\t  if (this.props.disabled) return;\r\n\r\n\t  this.setState({ hightlight: true });\r\n  }\r\n  \r\n  onDragLeave() {\r\n\t  this.setState({ hightlight: false });\r\n  }\r\n  \r\n  onDrop(event) {\r\n\t  event.preventDefault();\r\n\r\n\t  if (this.props.disabled) return;\r\n\r\n\t  const files = event.dataTransfer.files;\r\n\t  if (this.props.onFilesAdded) {\r\n\t\t  const array = this.fileListToArray(files);\r\n\t      this.props.onFilesAdded(array);\r\n\t  }\r\n\t  this.setState({ hightlight: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={`Dropzone ${this.state.hightlight ? \"Highlight\" : \"\"}`}\r\n      \tonDragOver={this.onDragOver}\r\n      \tonDragLeave={this.onDragLeave}\r\n      \tonDrop={this.onDrop}\r\n    \tonClick={this.openFileDialog}>\r\n        <img\r\n          alt=\"upload\"\r\n          className=\"Icon\"\r\n          src=\"cloud_upload-24px.svg\"\r\n        />\r\n        <input\r\n          ref={this.fileInputRef}\r\n          className=\"FileInput\"\r\n          type=\"file\"\r\n          multiple\r\n          onChange={this.onFilesAdded}\r\n        />\r\n        <span>Upload Files</span>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropzone;","import React, { Component } from \"react\";\r\nimport Dropzone from './dropzone/Dropzone';\r\n\r\nclass Upload extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      files: []\r\n    };\r\n    \r\n    this.uploadFiles = this.uploadFiles.bind(this);\r\n    this.sendRequest = this.sendRequest.bind(this);\r\n    this.onFilesAdded = this.onFilesAdded.bind(this);\r\n  }\r\n  \r\n  onFilesAdded(files) {\r\n    this.setState(prevState => ({\r\n      files: prevState.files.concat(files)\r\n    }));\r\n    setTimeout(() => { console.log(this.state.files); this.uploadFiles(); }, 0);\r\n  }\r\n\r\n  async uploadFiles() {\r\n    const promises = [];\r\n    this.state.files.forEach(file => {\r\n      promises.push(this.sendRequest(file));\r\n      console.log(promises);\r\n    });\r\n    try {\r\n      await Promise.all(promises);\r\n      this.setState({ files: undefined });\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  }\r\n  \r\n  sendRequest(file) {\r\n    return new Promise((res, rej) => {\r\n      const req = new XMLHttpRequest();\r\n      \r\n      const formData = new FormData();\r\n      formData.append(\"file\", file, file.name);\r\n      \r\n      req.open(\"POST\", \"http://172.18.86.35:5001/upload\");\r\n      req.send(formData);\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dropzone onFilesAdded={this.onFilesAdded} disabled={false} />\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Upload;","// src/App.js\r\n\r\nimport React, { Component } from \"react\";\r\nimport { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\nimport './App.css';\r\n\r\nimport PlayRateSlider from './control-sliders/PlayRateSlider';\r\nimport VolumeSlider from './control-sliders/VolumeSlider';\r\nimport Upload from './Upload';\r\n\r\nconst AudioContext = window.AudioContext || window.webkitAudioContext;\r\nconst audioContext = new AudioContext();\r\n\r\nconst client = new W3CWebSocket('ws://172.18.86.35:5000');\r\n\r\nclass App extends Component {\r\n\t\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n    \tvolume: 0,\r\n    \tplayRate: 0,\r\n    \tpitch: 0,\r\n    };\r\n    \r\n    this.source = audioContext.createBufferSource();\r\n    this.buttonLabel = 'Begin';\r\n    \r\n    this.gainNode = audioContext.createGain();\r\n    this.gainNode.connect(audioContext.destination);\r\n    \r\n    console.log(audioContext);\r\n    \r\n    this.getSound();\r\n    \r\n    this.playing = false;\r\n    \r\n    this.togglePlay = this.togglePlay.bind(this);\r\n  }\r\n  \r\n  smoothAlgorithm(val) {\r\n\treturn Math.pow((val / 100), (Math.log(10) / Math.log(2)));\r\n  }\r\n  \r\n  getSound() {\r\n\t  this.source = audioContext.createBufferSource();\r\n\t  \r\n\t  var url = \"http://172.18.86.35:5001/sound\"\r\n      var request = new XMLHttpRequest();\r\n\t  request.open(\"GET\", url, true);\r\n\t  request.responseType = \"arraybuffer\";\r\n\t  var a = this;\r\n\t  \r\n\t  this.source.onended = function() {\r\n    \ta.getSound();\r\n      }\r\n\t  request.onload = () => {\r\n\t\t  audioContext.decodeAudioData(request.response).then(function (data) {\r\n\t\t\t  a.source.buffer = data;\r\n\t\t\t  a.source.playbackRate.value = a.smoothAlgorithm(a.state.playRate);\r\n\t\t\t  a.source.connect(a.gainNode);\r\n\t\t\t  a.source.start(0);\r\n\t\t  }, (e) => { console.log(e); });\r\n  \t  }\r\n\t  request.send();\r\n  }\r\n  \r\n  togglePlay() {\r\n\t  this.playing = !this.playing;\r\n\t  this.playSoundLoop();\r\n  }\r\n  \r\n  playSoundLoop() {\r\n\tvar elem = document.getElementById(\"toggleButton\");\r\n\tif (this.playing) {\r\n\t\taudioContext.resume();\r\n\t\telem.innerHTML = 'Stop';\r\n\t}\r\n\telse {\r\n\t\taudioContext.suspend();\r\n\t\telem.innerHTML = 'Start';\r\n\t}\r\n  }\r\n  \r\n  componentDidMount() {\r\n\t  client.onopen = () => {\r\n\t   console.log('WebSocket Client Connected');\r\n\t  };\r\n\t  client.onmessage = (message) => {\r\n\t    const dataFromServer = JSON.parse(message.data);\r\n\t    this.setState({volume: dataFromServer.volume});\r\n\t    this.setState({ playRate: dataFromServer.playRate });\r\n\t  };\r\n\t}  \r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <center>\r\n          <VolumeSlider gainNode={this.gainNode} volume={this.state.volume} client={client}/>\r\n          <PlayRateSlider source={this.source} playRate={this.state.playRate} client={client}/>\r\n          <button id=\"toggleButton\" type=\"button\" onClick={(e, val) => { this.togglePlay(); }}>Begin</button>\r\n        </center>\r\n        <div className=\"Upload\">\r\n          <Upload />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App style={{ backgroundImage: `url(require(\"screaming.png\"))` }}/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}